{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulr\\\\OneDrive\\\\Documents\\\\devProjects\\\\diveSocial\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardActions, CardMedia, Button, Typography } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts.js';\nimport useStyles from './styles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"div\",\n      className: classes.image,\n      image: post.selectedFile,\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: classes.postEntry,\n          children: post.creator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), post.diveNumber && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.postEntry,\n          children: [\"Dive #\", post.diveNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.postEntry,\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.postEntry,\n        children: [\"Maximum Depth: \", post.maxDepth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.postEntry,\n        children: [\"Dive Duration: \", post.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.postEntry,\n        children: [\"Dive Logged: \", moment(post.createdAt).fromNow()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.details,\n      children: post.tags !== false && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: [post.tags.slice(0, 3).map(tag => `#${tag} `), \". . .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => setCurrentId(post._id),\n        children: [/*#__PURE__*/_jsxDEV(MoreVertIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), \"Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => dispatch(deletePost(post._id)),\n        children: [/*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => dispatch(likePost(post._id)),\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \"Likes: \", post.likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/paulr/OneDrive/Documents/devProjects/diveSocial/client/src/components/Posts/Post/Post.js"],"names":["React","Card","CardActions","CardMedia","Button","Typography","ThumbUpAltIcon","DeleteForeverIcon","MoreVertIcon","moment","useDispatch","deletePost","likePost","useStyles","Post","post","setCurrentId","classes","dispatch","card","image","selectedFile","title","content","postEntry","creator","diveNumber","location","maxDepth","duration","createdAt","fromNow","details","tags","slice","map","tag","cardActions","_id","likeCount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardActions, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport moment from 'moment';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts.js';\r\n\r\nimport useStyles from './styles.js';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia component='div' className={classes.image} image={post.selectedFile} title={post.title}>\r\n            </CardMedia>\r\n            <div className={classes.content}>\r\n                <div className={classes.title}>\r\n                    <Typography variant='h4' className={classes.postEntry}>{post.creator}</Typography>\r\n                    { post.diveNumber && <Typography variant='h6' className={classes.postEntry}>Dive #{post.diveNumber}</Typography> }\r\n                </div>\r\n                <Typography variant='h6' className={classes.postEntry}>Location: {post.location}</Typography>\r\n                <Typography variant='body1' className={classes.postEntry}>Maximum Depth: {post.maxDepth}</Typography>\r\n                <Typography variant='body1' className={classes.postEntry}>Dive Duration: {post.duration}</Typography>\r\n                {/* { post.buddy != false && <Typography variant='body2' className={classes.postEntry}>Buddy: {post.buddy}</Typography> } */}\r\n                {/* { post.notes && <Typography variant='body2' className={classes.postEntry}>Notes: {post.notes}</Typography> } */}\r\n                <Typography variant='body1' className={classes.postEntry}>Dive Logged: {moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.details}>\r\n                { post.tags !== false && <Typography variant='body2' color='textSecondary'>{post.tags.slice(0, 3).map((tag) => `#${tag} `)}. . .</Typography> }\r\n            </div>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button color='primary' size='small' onClick={()=> setCurrentId(post._id) }>\r\n                    <MoreVertIcon fontSize='medium' />\r\n                    Edit\r\n                </Button>\r\n                <Button size='small' color='primary' onClick={() => dispatch(deletePost(post._id))} >\r\n                    <DeleteForeverIcon fontSize='small' />\r\n                    Delete\r\n                </Button>\r\n                <Button size='small' color='primary' onClick={() => dispatch(likePost(post._id))} >\r\n                    <ThumbUpAltIcon fontSize='small' />\r\n                    Likes: {post.likeCount}\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n} \r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}