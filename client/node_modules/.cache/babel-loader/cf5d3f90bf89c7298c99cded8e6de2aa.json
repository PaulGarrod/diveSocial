{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulr\\\\OneDrive\\\\Documents\\\\devProjects\\\\diveSocial\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost, getPosts } from '../../actions/posts';\nimport useStyles from './styles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    diveNumber: '',\n    location: '',\n    notes: '',\n    buddy: '',\n    tags: '',\n    maxDepth: '',\n    duration: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      diveNumber: '',\n      location: '',\n      notes: '',\n      buddy: '',\n      tags: '',\n      maxDepth: '',\n      duration: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: currentId ? 'Edit your Log' : 'Create a new Log!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"diveNumber\",\n        variant: \"outlined\",\n        label: \"Dive Number\",\n        fullWidth: true,\n        value: postData.diveNumber,\n        onChange: e => setPostData({ ...postData,\n          diveNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"location\",\n        variant: \"outlined\",\n        label: \"Location\",\n        fullWidth: true,\n        value: postData.location,\n        onChange: e => setPostData({ ...postData,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"buddy\",\n        variant: \"outlined\",\n        label: \"Dive Buddy\",\n        fullWidth: true,\n        value: postData.buddy,\n        onChange: e => setPostData({ ...postData,\n          buddy: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"notes\",\n        variant: \"outlined\",\n        label: \"Notes\",\n        fullWidth: true,\n        value: postData.notes,\n        onChange: e => setPostData({ ...postData,\n          notes: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"maxDepth\",\n        variant: \"outlined\",\n        label: \"Maximum Depth (M)\",\n        fullWidth: true,\n        value: postData.maxDepth,\n        onChange: e => setPostData({ ...postData,\n          maxDepth: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"duration\",\n        variant: \"outlined\",\n        label: \"Duration (Mins)\",\n        fullWidth: true,\n        value: postData.duration,\n        onChange: e => setPostData({ ...postData,\n          duration: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (seperate by comma)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ig4ekcUUXN3qZ2sWkaKXS2loHnA=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/paulr/OneDrive/Documents/devProjects/diveSocial/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","Button","TextField","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","getPosts","useStyles","Form","currentId","setCurrentId","postData","setPostData","creator","diveNumber","location","notes","buddy","tags","maxDepth","duration","selectedFile","post","state","posts","find","p","_id","classes","dispatch","clear","handleSubmit","e","preventDefault","paper","form","input","target","value","split","fileInput","base64","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost, getPosts } from '../../actions/posts'\r\nimport useStyles from './styles.js';\r\n\r\nconst Form = ( { currentId, setCurrentId } ) => {\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        diveNumber: '',\r\n        location: '',\r\n        notes: '',\r\n        buddy: '',\r\n        tags: '',\r\n        maxDepth: '',\r\n        duration: '',\r\n        selectedFile: '' \r\n    });\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [dispatch]);\r\n    \r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({creator: '',\r\n        diveNumber: '',\r\n        location: '',\r\n        notes: '',\r\n        buddy: '',\r\n        tags: '',\r\n        maxDepth: '',\r\n        duration: '',\r\n        selectedFile: ''})\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData));\r\n        } else {\r\n            dispatch(createPost(postData));\r\n        }\r\n        clear();\r\n    }\r\n\r\n    \r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete='off' \r\n            noValidate \r\n            className={`${classes.form}`} \r\n            onSubmit={handleSubmit}>\r\n                <Typography variant='h4'>{ currentId ? 'Edit your Log' : 'Create a new Log!'}</Typography>\r\n                <TextField \r\n                className={classes.input}\r\n                name='creator' \r\n                variant='outlined' \r\n                label='Creator' \r\n                fullWidth\r\n                value={postData.creator}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, creator: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='diveNumber' \r\n                variant='outlined'\r\n                label='Dive Number' \r\n                fullWidth\r\n                value={postData.diveNumber}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, diveNumber: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='location' \r\n                variant='outlined' \r\n                label='Location' \r\n                fullWidth\r\n                value={postData.location}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, location: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='buddy' \r\n                variant='outlined' \r\n                label='Dive Buddy' \r\n                fullWidth\r\n                value={postData.buddy}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, buddy: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='notes' \r\n                variant='outlined' \r\n                label='Notes' \r\n                fullWidth\r\n                value={postData.notes}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, notes: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='maxDepth' \r\n                variant='outlined' \r\n                label='Maximum Depth (M)' \r\n                fullWidth\r\n                value={postData.maxDepth}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, maxDepth: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='duration' \r\n                variant='outlined' \r\n                label='Duration (Mins)' \r\n                fullWidth\r\n                value={postData.duration}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, duration: e.target.value\r\n                })}/>\r\n                <TextField \r\n                className={classes.input}\r\n                name='tags' \r\n                variant='outlined' \r\n                label='Tags (seperate by comma)' \r\n                fullWidth\r\n                value={postData.tags}\r\n                onChange={(e) => setPostData({\r\n                    ...postData, tags: e.target.value.split(',')\r\n                })}/>\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type='file'\r\n                        multiple={false}\r\n                        onDone={ ({base64}) => setPostData({ \r\n                            ...postData, selectedFile: base64 \r\n                        })}\r\n                    />\r\n                </div>  \r\n                <Button className={classes.button} variant='contained' color='primary' size='large' type='submit' fullWidth>Submit</Button>\r\n                <Button className={classes.button} variant='contained' color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}